{"ast":null,"code":"import _asyncToGenerator from \"/Users/mrcll/teste-fdp/angularfirebase-authentication/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/compat/auth\";\nimport * as i2 from \"@angular/router\";\nexport class AuthGuard {\n  constructor(afAuth, router) {\n    this.afAuth = afAuth;\n    this.router = router;\n  }\n\n  canActivate(route, state) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const user = yield _this.afAuth.currentUser;\n      console.log(user);\n      const isAuthenticated = user ? true : false;\n\n      if (!isAuthenticated) {\n        alert('You must be authenticated in order to access this page');\n\n        _this.router.navigate(['/login']);\n      }\n\n      return isAuthenticated;\n    })();\n  }\n\n}\n\nAuthGuard.ɵfac = function AuthGuard_Factory(t) {\n  return new (t || AuthGuard)(i0.ɵɵinject(i1.AngularFireAuth), i0.ɵɵinject(i2.Router));\n};\n\nAuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthGuard,\n  factory: AuthGuard.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["/Users/mrcll/teste-fdp/angularfirebase-authentication/src/app/shared/guard/auth.guard.ts"],"names":["i0","i1","i2","AuthGuard","constructor","afAuth","router","canActivate","route","state","user","currentUser","console","log","isAuthenticated","alert","navigate","ɵfac","AuthGuard_Factory","t","ɵɵinject","AngularFireAuth","Router","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":";AAAA,OAAO,KAAKA,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,2BAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,iBAApB;AACA,OAAO,MAAMC,SAAN,CAAgB;AACnBC,EAAAA,WAAW,CAACC,MAAD,EAASC,MAAT,EAAiB;AACxB,SAAKD,MAAL,GAAcA,MAAd;AACA,SAAKC,MAAL,GAAcA,MAAd;AACH;;AACKC,EAAAA,WAAW,CAACC,KAAD,EAAQC,KAAR,EAAe;AAAA;;AAAA;AAC5B,YAAMC,IAAI,SAAS,KAAI,CAACL,MAAL,CAAYM,WAA/B;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,YAAMI,eAAe,GAAGJ,IAAI,GAAG,IAAH,GAAU,KAAtC;;AACA,UAAI,CAACI,eAAL,EAAsB;AAClBC,QAAAA,KAAK,CAAC,wDAAD,CAAL;;AACA,QAAA,KAAI,CAACT,MAAL,CAAYU,QAAZ,CAAqB,CAAC,QAAD,CAArB;AACH;;AACD,aAAOF,eAAP;AAR4B;AAS/B;;AAdkB;;AAgBvBX,SAAS,CAACc,IAAV,GAAiB,SAASC,iBAAT,CAA2BC,CAA3B,EAA8B;AAAE,SAAO,KAAKA,CAAC,IAAIhB,SAAV,EAAqBH,EAAE,CAACoB,QAAH,CAAYnB,EAAE,CAACoB,eAAf,CAArB,EAAsDrB,EAAE,CAACoB,QAAH,CAAYlB,EAAE,CAACoB,MAAf,CAAtD,CAAP;AAAuF,CAAxI;;AACAnB,SAAS,CAACoB,KAAV,GAAkB,aAAcvB,EAAE,CAACwB,kBAAH,CAAsB;AAAEC,EAAAA,KAAK,EAAEtB,SAAT;AAAoBuB,EAAAA,OAAO,EAAEvB,SAAS,CAACc,IAAvC;AAA6CU,EAAAA,UAAU,EAAE;AAAzD,CAAtB,CAAhC","sourcesContent":["import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/compat/auth\";\nimport * as i2 from \"@angular/router\";\nexport class AuthGuard {\n    constructor(afAuth, router) {\n        this.afAuth = afAuth;\n        this.router = router;\n    }\n    async canActivate(route, state) {\n        const user = await this.afAuth.currentUser;\n        console.log(user);\n        const isAuthenticated = user ? true : false;\n        if (!isAuthenticated) {\n            alert('You must be authenticated in order to access this page');\n            this.router.navigate(['/login']);\n        }\n        return isAuthenticated;\n    }\n}\nAuthGuard.ɵfac = function AuthGuard_Factory(t) { return new (t || AuthGuard)(i0.ɵɵinject(i1.AngularFireAuth), i0.ɵɵinject(i2.Router)); };\nAuthGuard.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: AuthGuard, factory: AuthGuard.ɵfac, providedIn: 'root' });\n"]},"metadata":{},"sourceType":"module"}